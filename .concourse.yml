---
resources:
  - name: filelist-ng-git
    type: git
    icon: git
    source:
      uri: git@git.dfau.de:dfau/filelist-ng.git
      private_key: ((ssh-key.id_rsa))

jobs:
  - name: test-backend
    public: true
    plan:
      - get: filelist-ng-git
        trigger: true
      - task: run-build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: php, tag: 7.3-cli }
          inputs:
            - name: filelist-ng-git
          outputs:
            - name: filelist-ng-git
          params:
            COMPOSER_ALLOW_SUPERUSER: 1
          run:
            path: /bin/sh
            args:
              - -c
              - |
                apt-get update
                apt-get install -y git unzip

                php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
                php -r "if (hash_file('sha384', 'composer-setup.php') === 'c31c1e292ad7be5f49291169c0ac8f683499edddcfd4e42232982d0fd193004208a58ff6f353fde0012d35fdd72bc394') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
                php composer-setup.php --install-dir=/usr/local/bin --filename=composer
                php -r "unlink('composer-setup.php');"

                cd filelist-ng-git

                composer install
      - task: run-codingstandards
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: php, tag: 7.3-cli }
          inputs:
            - name: filelist-ng-git
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd filelist-ng-git
                ./etc/scripts/checkCodingStandards.sh

      - task: run-unit-tests
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: amidos/dcind}
          inputs:
            - name: filelist-ng-git
          run:
            path: /bin/sh
            args:
              - -c
              - |
                source /docker-lib.sh
                start_docker
                cd filelist-ng-git
                rm .Build/Web/typo3conf/ext/cms_filelist_ng
                ln -s "$(pwd)" ./.Build/Web/typo3conf/ext/cms_filelist_ng
                ./etc/scripts/runTests.sh -s unit

      - task: run-functional-tests
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: amidos/dcind}
          inputs:
            - name: filelist-ng-git
          run:
            path: /bin/sh
            args:
              - -c
              - |
                source /docker-lib.sh
                start_docker
                cd filelist-ng-git
                rm .Build/Web/typo3conf/ext/cms_filelist_ng
                ln -s "$(pwd)" ./.Build/Web/typo3conf/ext/cms_filelist_ng
                ./etc/scripts/runTests.sh -s functional

  - name: test-frontend
    public: true
    plan:
      - get: filelist-ng-git
        trigger: true
      - task: run-build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: node, tag: 14-alpine }
          inputs:
            - name: filelist-ng-git
          outputs:
            - name: filelist-ng-git
          caches:
            - path: filelist-ng-git/Builde/node_modules
          run:
            path: /bin/sh
            args:
              - -c
              - |
                apk add --no-progress git

                echo "Node Version: $(node --version)"
                echo "NPM Version: $(npm --version)"

                cd filelist-ng-git/Build
                npm install
                npm run build:dev

      - task: run-lint
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: node, tag: 14-alpine }
          inputs:
            - name: filelist-ng-git
          caches:
            - path: filelist-ng-git/Builde/node_modules
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd filelist-ng-git/Build
                npm run lint

      - task: run-karma
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: weboaks/node-karma-protractor-chrome, tag: alpine-node14 }
          inputs:
            - name: filelist-ng-git
          run:
            path: /bin/sh
            args:
              - -c
              - |
                echo "Node Version: $(node --version)"
                echo "NPM Version: $(npm --version)"

                cd filelist-ng-git/Build
                npm rebuild --quiet
                npm run test:ci
---
resources:
  - name: workspace
    type: git
    icon: git
    source:
      uri: git@git.dfau.de:dfau/filelist-ng.git
      private_key: ((ssh-key.id_rsa))

jobs:
  - name: test-backend
    public: true
    plan:
      - get: workspace
        trigger: true
      - task: run-build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: shippingdocker/php-composer, tag: 7.4 }
          inputs:
            - name: workspace
          outputs:
            - name: workspace
          params:
            COMPOSER_ALLOW_SUPERUSER: 1
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd workspace
                composer install
      - task: run-codingstandards
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: shippingdocker/php-composer, tag: 7.4 }
          inputs:
            - name: workspace
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd workspace
                ./etc/scripts/checkCodingStandards.sh

      - task: run-unit-tests
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: amidos/dcind}
          inputs:
            - name: workspace
          run:
            path: /bin/sh
            args:
              - -c
              - |
                source /docker-lib.sh
                start_docker
                cd workspace
                rm .Build/Web/typo3conf/ext/cms_filelist_ng
                ln -s "$(pwd)" ./.Build/Web/typo3conf/ext/cms_filelist_ng
                ./etc/scripts/runTests.sh -s unit

      - task: run-functional-tests
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: amidos/dcind}
          inputs:
            - name: workspace
          run:
            path: /bin/sh
            args:
              - -c
              - |
                source /docker-lib.sh
                start_docker
                cd workspace
                rm .Build/Web/typo3conf/ext/cms_filelist_ng
                ln -s "$(pwd)" ./.Build/Web/typo3conf/ext/cms_filelist_ng
                ./etc/scripts/runTests.sh -s functional

  - name: test-frontend
    public: true
    plan:
      - get: workspace
        trigger: true
      - task: run-build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: node, tag: 14-alpine }
          inputs:
            - name: workspace
          outputs:
            - name: workspace
          caches:
            - path: workspace/Builde/node_modules
          run:
            path: /bin/sh
            args:
              - -c
              - |
                apk add --no-progress git

                echo "Node Version: $(node --version)"
                echo "NPM Version: $(npm --version)"

                cd workspace/Build
                npm install
                npm run build:dev

      - task: run-lint
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: { repository: node, tag: 14-alpine }
          inputs:
            - name: workspace
          caches:
            - path: workspace/Builde/node_modules
          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd workspace/Build
                npm run lint

      - task: run-karma
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: { repository: weboaks/node-karma-protractor-chrome, tag: alpine-node14 }
          inputs:
            - name: workspace
          run:
            path: /bin/sh
            args:
              - -c
              - |
                echo "Node Version: $(node --version)"
                echo "NPM Version: $(npm --version)"

                cd workspace/Build
                npm rebuild --quiet > /dev/null
                npm run test:ci
